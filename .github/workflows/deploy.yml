name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-acr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      - name: Build, tag, and push image to Azure Container Registry
        env:
          ACR_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          IMAGE_TAG: latest
        run: |
          docker build -t $ACR_REGISTRY/text-summarizer:$IMAGE_TAG .
          docker push $ACR_REGISTRY/text-summarizer:$IMAGE_TAG

  Continuous-Deployment:
    needs: build-and-push-acr-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: SSH into Azure VM and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: azureuser
          key: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}
          script: |
            az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}
            docker pull ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/text-summarizer:latest
            docker stop $(docker ps -q --filter ancestor=${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/text-summarizer:latest) || true
            docker rm $(docker ps -q --filter ancestor=${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/text-summarizer:latest) || true
            docker run -d -p 80:8080 --name=text-summarizer ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/text-summarizer:latest
            docker system prune -f
